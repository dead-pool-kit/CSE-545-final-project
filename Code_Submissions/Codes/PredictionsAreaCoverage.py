# -*- coding: utf-8 -*-
"""PredictionsAreaCoverage.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c1-Qv31CTD_d9P3vcjqxWDNqD0RETC4m

######################################################################################################

Team Members : Pulkit Varshney, Pratik Thorwe, Purva Makarand Mhasakar, Saurabh Parekh

Code File Description :  This code uses prophet tools (time series forecasting model) to forecast the green and land area coverage for next 5 time periods

######################################################################################################
"""

import pandas as pd
import os
import numpy as np
from pandas import read_csv
from pandas import to_datetime
from pandas import DataFrame
from fbprophet import Prophet
from matplotlib import pyplot
import matplotlib.pyplot as plt

"""#####################################################################################################

Function Name: predictionsForGreenArea()

Parameters:
1. folder : the path of the folder

This function reads the csv file, selects the desired columns for Green Area predictions. We then fit the prophet model, which is a time series based forecasting model and make future forecasting for next 5 time periods

#####################################################################################################
"""

def predictionsForGreenArea(folder):
        for filename in os.listdir(folder):
          path = '/content/predict/'+filename
          df = read_csv(path,names=["Date", "Green", "Brown", "Construction"])
          df.drop(columns=["Brown","Construction"],inplace=True)
          df['Date'] = pd.DatetimeIndex(df['Date'])
          df = df.rename(columns={'Date': 'ds','Green': 'y'})
          predictionModel = Prophet(interval_width=0.95)
          predictionModel.fit(df)
          predictionDates = predictionModel.make_future_dataframe(periods=5, freq='MS')
          forecast = predictionModel.predict(predictionDates)
          predictionModel.plot(forecast,uncertainty=False)
          plt.xlabel('Time')
          plt.ylabel('Percentage of Greenery')

"""#####################################################################################################

Function Name: predictionsForLandArea()

Parameters:
1. folder : the path of the folder

This function reads the csv file, selects the desired columns for urban land Area predictions. We then fit the prophet model to perform forecasting.

#####################################################################################################
"""

def predictionsForLandArea(folder):
        for filename in os.listdir(folder):
          path = '/content/predict/'+filename
          df = read_csv(path,names=["Date", "Green", "Brown", "Construction"])
          df.drop(columns=["Green","Construction"],inplace=True)
          df['Date'] = pd.DatetimeIndex(df['Date'])
          df = df.rename(columns={'Date': 'ds','Brown': 'y'})
          predictionModel = Prophet(interval_width=0.95)
          predictionModel.fit(df)
          predictionDates = predictionModel.make_future_dataframe(periods=5, freq='MS')
          forecast = predictionModel.predict(predictionDates)
          predictionModel.plot(forecast,uncertainty=False)
          plt.xlabel('Time')
          plt.ylabel('Percentage of Land Area')

predictionsForGreenArea('/content/predict')

predictionsForLandArea('/content/predict')